subprojects {
    apply plugin: "java"
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "jacoco"

    repositories {
		mavenCentral()
    }

    sourceCompatibility = JavaVersion.VERSION_11

    jacocoTestReport {
        sourceSets sourceSets.main
        executionData.from = fileTree(buildDir).include("/jacoco/*.exec")
    }

    ext {
        springBootVersion = '2.2.2.RELEASE'
        lombokVersion = '1.18.8'
    }

    dependencies {
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
        implementation 'io.projectreactor:reactor-core'
        implementation 'io.projectreactor.addons:reactor-extra'
        implementation("org.projectlombok:lombok")
        compileOnly("org.projectlombok:lombok")
        testCompileOnly("org.projectlombok:lombok")
        annotationProcessor("org.projectlombok:lombok")
        testAnnotationProcessor("org.projectlombok:lombok")
        compile('com.amazonaws:aws-java-sdk-core:1.11.713')
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR2"
        }
    }

    ext.libs = [
        unit_tests: [
            "com.squareup.okhttp3:okhttp:4.2.2",
            "com.squareup.okhttp3:mockwebserver:4.2.2",
            "io.projectreactor:reactor-test:3.3.0.RELEASE",
            "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
        ],
        acceptance_tests: [
            "com.googlecode.yatspec:yatspec:1.20"
        ],
        integration_test: [
            "org.springframework:spring-test:${springBootVersion}",
            "org.skyscreamer:jsonassert:1.3.0",
            "com.cedarsoftware:json-io:4.4.0"
        ],
        end_to_end_t: [
            "org.springframework:spring-test:${springBootVersion}",
            "com.mashape.unirest:unirest-java:1.4.8",
            "org.skyscreamer:jsonassert:1.3.0",
            "com.cedarsoftware:json-io:4.4.0"
        ],
        spring_boot: [
            "org.springframework.boot:spring-boot-starter-logging:${springBootVersion}",
            "org.springframework.boot:spring-boot-devtools:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}"
        ],
        rest: [
            "org.springframework:spring-web:${springBootVersion}"
        ],
        string_utils: [
            "org.apache.commons:commons-lang3:3.4",
            "commons-io:commons-io:2.6"
        ],
        jack:[
            "com.fasterxml.jackson.core:jackson-annotations:2.10.0"
        ],
        config:[
            "org.springframework.cloud:spring-cloud-starter-config",
            "org.springframework.retry:spring-retry"
        ],
        api_validation:[
            "javax.validation:validation-api:2.0.1.Final"
        ],
        entry_point:[
			"com.fasterxml.jackson.core:jackson-databind:2.10.3",
            "javax.el:javax.el-api:3.0.0",
            "org.glassfish.web:javax.el:2.2.1",
            "org.apache.commons:commons-text:1.8"
        ],
        log:[
     	 	"org.slf4j:slf4j-api:1.7.19"
    	],
        test_unit:[
			"org.powermock:powermock-api-mockito2:1.7.4",
			"org.mockito:mockito-core:2.8.9",
			"org.powermock:powermock-module-junit4:1.6.4",
			"junit:junit:4.12"
        ]
    ]
}
